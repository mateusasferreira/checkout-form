{"version":3,"sources":["contexts/validationContext.tsx","components/signup/signup.tsx","components/address/address.tsx","components/personal-data/personal-data.tsx","components/confirmation/confirmationStep.tsx","components/sucess/sucessPage.tsx","steps-array/steps.tsx","contexts/formContext.tsx","components/checkout/checkout-form.tsx","App.tsx","index.tsx"],"names":["ValidationContext","createContext","ValidationContextProvider","children","input","a","zip","replace","options","method","mode","headers","fetch","response","json","data","erro","validity","unvalid","message","locationData","city","localidade","street","logradouro","district","bairro","console","log","Provider","value","passwordValidation","RegExp","test","emailValidation","zipValidation","useValidation","useContext","SignUpForm","onFormSubmit","useForm","useState","email","setEmail","password","setPassword","discounts","setDiscounts","features","setFeatures","errors","setErrors","onSubmit","e","preventDefault","TextField","error","helperText","placeholder","onChange","target","onBlur","variant","label","margin","fullWidth","required","type","onFocus","FormControlLabel","control","Switch","checked","name","color","Button","styles","shortLeftInput","marginRight","marginBottom","width","shortRightInput","longLeftInput","extraShortRightInput","button","AddressRegistration","previousStep","userData","setStreet","number","setNumber","setCity","setDistrict","setZip","className","action","style","onClick","PersonalData","setName","id","setId","idNumber","parseInt","nameInput","marginTop","display","normalInput","ConfirmationStep","readMode","setReadMode","focused","defaultValue","InputProps","readOnly","length","SucessWarning","src","alt","steps","FormContext","FormContextProvider","stepperDisplay","setStepperDisplay","setUserData","currentStep","setCurrentStep","nextStep","useEffect","newdata","CheckoutForm","Box","Stepper","activeStep","Step","StepLabel","App","Container","maxWidth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.143ba97e.chunk.js","sourcesContent":["import React,{createContext, ReactNode, useContext, useState} from 'react'\r\n\r\ntype Validation = {\r\n    passwordValidation: (input: string) => {unvalid: boolean, message: string},\r\n    emailValidation: (input: string) => {unvalid: boolean, message: string},\r\n    zipValidation: (input: string) => Promise<{\r\n        validity: {unvalid: boolean, message: string},\r\n        locationData: {\r\n            city: string\r\n            street: string\r\n            district: string\r\n        } | null\r\n    }>\r\n}\r\n\r\n\r\ntype ValidationContextProviderProps = {\r\n    children: ReactNode;\r\n}\r\n\r\nconst ValidationContext = createContext({} as Validation)\r\n\r\nexport function ValidationContextProvider({children}: ValidationContextProviderProps) {\r\n    \r\n   \r\n    function emailValidation (input: string) {\r\n        const regexValid = new RegExp(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/)\r\n        return !regexValid.test(input) ? (\r\n            {unvalid:true, message: 'Please, provide a valid email account'}\r\n        ) : ({unvalid:false, message: ''}) \r\n    }\r\n    \r\n    function passwordValidation(input: string) {\r\n         const regexValid = new RegExp(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/)   \r\n         return !regexValid.test(input) ? (\r\n             {unvalid:true, message: 'your password must have at least 8 characters, one uppercase letter and one number'}\r\n             ) : ({unvalid:false, message: ''})          \r\n        }\r\n    \r\n    async function zipValidation(input: string) {\r\n        try {\r\n            const zip = input.replace(/\\D/g, '')\r\n            const options: RequestInit = {\r\n                method: 'GET',\r\n                mode: 'cors',\r\n                headers: {\r\n                    'Content-Type': 'application/json'                \r\n                  },\r\n            }\r\n            const response = await fetch(`https://viacep.com.br/ws/${zip}/json`, options)\r\n            const data:any = await response.json()\r\n            if(data.erro) {\r\n                return {\r\n                    validity: {unvalid: true, message: 'Inexisting ZIP Code (for testing, try: 01001-001)'},\r\n                    locationData: null\r\n                }\r\n            } \r\n            return {\r\n                validity: {unvalid: false, message: ''},\r\n                locationData: {\r\n                    city: data.localidade,\r\n                    street: data.logradouro,\r\n                    district: data.bairro\r\n                }\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n            return {\r\n                validity: {unvalid: true, message: 'Invalid ZIP code format (for testing, try: 01001-001)'},\r\n                locationData: null\r\n            }\r\n        }           \r\n    }\r\n           \r\n\r\n    return (\r\n        <ValidationContext.Provider value={{\r\n            passwordValidation,\r\n            emailValidation,\r\n            zipValidation\r\n        }}>\r\n            {children}\r\n        </ValidationContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useValidation = () => {\r\n    return useContext(ValidationContext)\r\n}","import { useState } from \"react\";\r\nimport { TextField, Button, Switch, FormControlLabel } from \"@material-ui/core\";\r\nimport { useForm } from \"../../contexts/formContext\";\r\nimport {useValidation} from '../../contexts/validationContext'\r\n\r\n\r\nfunction SignUpForm() {\r\n  const {passwordValidation, emailValidation} = useValidation()\r\n  \r\n  const {onFormSubmit} = useForm()\r\n  \r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [discounts, setDiscounts] = useState<boolean>(true);\r\n  const [features, setFeatures] = useState<boolean>(true);\r\n  const [errors, setErrors] = useState({\r\n    password: {\r\n      unvalid: false,\r\n      message: '',\r\n    },\r\n    email: {\r\n      unvalid: false,\r\n      message: \"\",\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        if (errors.password.unvalid || errors.email.unvalid) return \r\n        onFormSubmit({ email, password, discounts, features });\r\n      }}\r\n    >\r\n      \r\n      <TextField\r\n        value={email}\r\n        error={errors.email.unvalid}\r\n        helperText={errors.email.message}\r\n        placeholder='user@email.com'\r\n        onChange={(e) => {\r\n          setEmail(e.target.value);\r\n        }}\r\n        onBlur={()=> {\r\n          setErrors(errors => ({...errors, email: emailValidation(email)}));\r\n        }}\r\n        variant=\"outlined\"\r\n        label=\"Email\"\r\n        margin=\"normal\"\r\n        fullWidth\r\n        required\r\n      ></TextField>\r\n      <TextField\r\n        error={errors.password.unvalid}\r\n        type=\"password\"\r\n        helperText={errors.password.message}\r\n        placeholder='e.g. Testing123'\r\n        onBlur={() => {          \r\n          setErrors(errors => ({...errors, password: passwordValidation(password)}));\r\n        }}\r\n        onFocus={()=>{\r\n          setErrors(errors => ({...errors, password:{unvalid:false, message: 'Disclaimer: this is just a prototype for testing, do not provide real passwords. Try something like \\'Testing123\\'.'}}))\r\n        }}\r\n        value={password}\r\n        onChange={(e) => {\r\n          setPassword(e.target.value);\r\n        }}\r\n        variant=\"outlined\"\r\n        label=\"Password\"\r\n        margin=\"normal\"\r\n        fullWidth\r\n        required\r\n      ></TextField>\r\n      <FormControlLabel\r\n        label=\"Discounts\"\r\n        control={\r\n          <Switch\r\n            checked={discounts}\r\n            onChange={(e) => {\r\n              setDiscounts(e.target.checked);\r\n            }}\r\n            name=\"promoções\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n      />\r\n      <FormControlLabel\r\n        label=\"New Features\"\r\n        control={\r\n          <Switch\r\n            checked={features}\r\n            onChange={(e) => {\r\n              setFeatures(e.target.checked);\r\n            }}\r\n            name=\"promoções\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n      />\r\n\r\n      <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n        Sign Up\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SignUpForm;\r\n","import {TextField, Button, InputLabel, Select, MenuItem, FormControl} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { useForm } from \"../../contexts/formContext\";\r\nimport {useValidation} from '../../contexts/validationContext'\r\n \r\n\r\n\r\nfunction AddressRegistration() {\r\n  const {onFormSubmit, previousStep, userData} = useForm()\r\n  const {zipValidation} = useValidation()\r\n    \r\n  const [street, setStreet] = useState<string>(\"\");\r\n  const [number, setNumber] = useState<string>('');\r\n  const [city, setCity] = useState<string>('');\r\n  const [district, setDistrict] = useState<string>('');\r\n  const [zip, setZip] = useState<string>('');\r\n\r\n  const [errors, setErrors] = useState({\r\n    zip: {\r\n      unvalid: false, \r\n      message: ''\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <form \r\n        className=\"registrationForm\"\r\n        action=\"submit\" \r\n        onSubmit={(e) => {\r\n        e.preventDefault()\r\n        if (errors.zip.unvalid) return\r\n        onFormSubmit({street, number, city, district, zip})}}>\r\n        <TextField\r\n          value={zip}\r\n          error={errors.zip.unvalid}\r\n          helperText={errors.zip.message}\r\n          type=\"text\"\r\n          onChange={(e) => {\r\n            setZip(e.target.value);\r\n          }}\r\n          onBlur={async () => {\r\n            const response = await zipValidation(zip)\r\n            setErrors({zip:response.validity}) \r\n            if(response.locationData) {\r\n              setCity(response.locationData.city)\r\n              setStreet(response.locationData.street)\r\n              setDistrict(response.locationData.district)\r\n            }\r\n          }}\r\n          variant=\"outlined\"\r\n          label=\"Zip Code\" \r\n          style={styles.shortLeftInput}   \r\n          required\r\n        ></TextField>\r\n        \r\n        <TextField\r\n          value={street}\r\n          type=\"text\"\r\n          onChange={(e) => {\r\n            setStreet(e.target.value);\r\n          }}\r\n          variant=\"outlined\"\r\n          label=\"Street\"\r\n          style={styles.longLeftInput}\r\n          required\r\n        ></TextField>\r\n        <TextField\r\n          value={number}\r\n          type=\"text\"\r\n          onChange={(e) => {\r\n            setNumber(e.target.value);\r\n          }}\r\n          variant=\"outlined\"\r\n          label=\"Number\"\r\n          style={styles.extraShortRightInput}\r\n          required\r\n        ></TextField>\r\n        \r\n        <TextField\r\n          type=\"text\"\r\n          value={city}\r\n          onChange={(e) => {\r\n            setCity(e.target.value);\r\n          }}\r\n          variant=\"outlined\"\r\n          label=\"City\"\r\n          style={styles.shortLeftInput}\r\n          required\r\n        ></TextField>\r\n        <TextField\r\n          type=\"text\"\r\n          value={district}\r\n          onChange={(e) => {\r\n            setDistrict(e.target.value);\r\n          }}\r\n          variant=\"outlined\"\r\n          label=\"District\"\r\n          required\r\n          style={styles.shortRightInput}\r\n        ></TextField>\r\n        <Button onClick={previousStep} style={styles.button} color=\"primary\" variant=\"contained\">\r\n          Back\r\n        </Button>\r\n        <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n          Register\r\n        </Button>\r\n        \r\n      </form>\r\n\r\n        \r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  shortLeftInput: {\r\n    marginRight: '1rem',\r\n    marginBottom: '1rem',\r\n    width: 'calc(50% - 1rem)',\r\n  },\r\n  shortRightInput: {\r\n    marginBottom: '1rem',\r\n    width: '50%'\r\n  },\r\n  longLeftInput: {\r\n    marginRight: '1rem',\r\n    marginBottom: '1rem',\r\n    width: 'calc(75% - 1rem)',\r\n  },\r\n  extraShortRightInput: {\r\n    marginBottom: '1rem',\r\n    width: '25%'\r\n  },\r\n  button: {\r\n   marginRight: '1rem' \r\n  }\r\n}\r\n\r\nexport default AddressRegistration;\r\n","import { useState } from \"react\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport { useForm } from \"../../contexts/formContext\";\r\n\r\nfunction PersonalData() {\r\n  const { onFormSubmit, userData } = useForm();\r\n  const [name, setName] = useState<string>(userData.name);\r\n  const [id, setId] = useState<number | null>(userData.id);\r\n\r\n  return (\r\n    <form\r\n    className=\"signInForm\"\r\n      action=\"submit\"\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        onFormSubmit({ name, id });\r\n      }}\r\n    >\r\n      <TextField\r\n        value={name}\r\n        onChange={(e) => {\r\n          setName(e.target.value);\r\n        }}\r\n        placeholder='Name Surname'\r\n        variant=\"outlined\"\r\n        label=\"Full Name\"\r\n        margin=\"normal\"\r\n        fullWidth\r\n        required\r\n      ></TextField>\r\n      <TextField\r\n        value={id}\r\n        onChange={(e) => {\r\n          const idNumber = parseInt(e.target.value);\r\n          setId(idNumber);\r\n        }}\r\n        variant=\"outlined\"\r\n        type=\"number\"\r\n        label=\"ID Number\"\r\n        margin=\"normal\"\r\n        fullWidth\r\n        required\r\n      ></TextField>\r\n      <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n        Next\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default PersonalData;\r\n","import { useState } from \"react\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\n\r\nimport { useForm } from \"../../contexts/formContext\";\r\nimport {useValidation} from '../../contexts/validationContext'\r\n\r\nfunction ConfirmationStep() {\r\n  const { userData, onFormSubmit } = useForm();\r\n\r\n  const {zipValidation} = useValidation()\r\n\r\n  const [readMode, setReadMode] = useState<boolean>(true);\r\n\r\n  const [name, setName] = useState<string>(userData.name);\r\n  const [id, setId] = useState<number | null>(userData.id);\r\n  const [street, setStreet] = useState<string>(userData.street);\r\n  const [city, setCity] = useState<string>(userData.city);\r\n  const [district, setDistrict] = useState<string>(userData.district);\r\n  const [number, setNumber] = useState<string>(userData.number);\r\n  const [zip, setZip] = useState<string>(userData.zip);\r\n\r\n  const [errors, setErrors] = useState({\r\n    zip: {\r\n      unvalid: false, \r\n      message: ''\r\n    }\r\n  })\r\n\r\n\r\n  function toggleReadMode() {\r\n    setReadMode(!readMode);\r\n  }\r\n\r\n  return (\r\n    <form action=\"submit\"\r\n    onSubmit={(e)=> {\r\n      e.preventDefault();\r\n      if (errors.zip.unvalid) return\r\n      onFormSubmit({name, id, street, number, city, district, zip})\r\n    }}\r\n    >\r\n      <Button \r\n      variant=\"outlined\" \r\n      color=\"primary\" \r\n      onClick={toggleReadMode}\r\n      >\r\n        {readMode ? 'Edit Data' : 'Done' }\r\n      </Button>\r\n      \r\n      <TextField\r\n        id=\"name\"\r\n        value={name}\r\n        onChange={(e) => {\r\n          setName(e.target.value);\r\n        }}\r\n        label=\"Name\"\r\n        focused={!readMode}\r\n        defaultValue={name}\r\n        style={styles.nameInput}\r\n        InputProps={{\r\n          readOnly: readMode,\r\n        }}\r\n        fullWidth\r\n      />\r\n      <TextField\r\n        id=\"id\"\r\n        value={id}\r\n        onChange={(e) => {\r\n          if (e.target.value.length > 0) {\r\n            const idNumber = parseInt(e.target.value);\r\n            setId(idNumber);\r\n          } else setId(null);\r\n        }}\r\n        label=\"ID Number\"\r\n        type=\"number\"\r\n        focused={!readMode}\r\n        InputProps={{\r\n          readOnly: readMode,\r\n        }}\r\n        style={styles.normalInput}\r\n        fullWidth\r\n      />\r\n      <TextField\r\n        id=\"zip\"\r\n        error={errors.zip.unvalid}\r\n        helperText={errors.zip.message}\r\n        value={zip}\r\n        type=\"text\"\r\n        onChange={(e) => {\r\n          setZip(e.target.value);\r\n        }}\r\n        onBlur={async () => {\r\n          const response = await zipValidation(zip)\r\n          setErrors({zip:response.validity}) \r\n          if(response.locationData) {\r\n            setCity(response.locationData.city)\r\n            setStreet(response.locationData.street)\r\n            setDistrict(response.locationData.district)\r\n          }\r\n        }}\r\n        label=\"Zip Code\"\r\n        focused={!readMode}\r\n        InputProps={{\r\n          readOnly: readMode,\r\n        }}\r\n        style={styles.normalInput}\r\n        fullWidth\r\n      />\r\n      <TextField\r\n        id=\"street\"\r\n        value={street}\r\n        onChange={(e) => {\r\n          setStreet(e.target.value);\r\n        }}\r\n        label=\"Street\"\r\n        focused={!readMode}\r\n        InputProps={{\r\n          readOnly: readMode,\r\n        }}\r\n        style={styles.normalInput}\r\n        fullWidth\r\n      />\r\n      <TextField\r\n        id=\"number\"\r\n        value={number}\r\n        onChange={(e) => {\r\n          setNumber(e.target.value);\r\n        }}\r\n        label=\"Number\"\r\n        focused={!readMode}\r\n        style={styles.normalInput}\r\n        InputProps={{\r\n          readOnly: readMode,\r\n        }}\r\n      />\r\n      <TextField\r\n        id=\"city\"\r\n        value={city}\r\n        onChange={(e) => {\r\n          setCity(e.target.value);\r\n        }}\r\n        label=\"City\"\r\n        focused={!readMode}\r\n        InputProps={{\r\n          readOnly: readMode,\r\n        }}\r\n        style={styles.normalInput}\r\n\r\n        fullWidth\r\n      />\r\n      <TextField\r\n        id=\"district\"\r\n        value={district}\r\n        onChange={(e) => {\r\n          setDistrict(e.target.value);\r\n        }}\r\n        label=\"District\"\r\n        focused={!readMode}\r\n        InputProps={{\r\n          readOnly: readMode,\r\n        }}\r\n        style={styles.normalInput}\r\n        fullWidth\r\n      />      \r\n      \r\n      <Button \r\n      variant=\"contained\"\r\n      type=\"submit\"\r\n      color=\"primary\" \r\n      \r\n      >\r\n        Confirm and Submit\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  nameInput: {\r\n    marginBottom: '1rem',\r\n    marginTop: '1rem',\r\n    width: '50%',\r\n    display: 'block'\r\n  },\r\n  normalInput: {\r\n    marginBottom: '1rem',\r\n    width: '50%'\r\n  }\r\n\r\n}\r\n\r\nexport default ConfirmationStep;\r\n","import \"./style.css\"\r\n\r\nfunction SucessWarning(){\r\n     return(\r\n         <div className=\"sucess\">\r\n             <img src=\"/success.svg\" alt=\"sucess alert\"/>\r\n             \r\n             <h1>Thank you</h1>\r\n             <h3>Your registration is complete</h3>\r\n         </div>\r\n     )\r\n}\r\n\r\nexport default SucessWarning","import SignUpForm from \"../components/signup/signup\";\r\nimport AddressRegistration from \"../components/address/address\";\r\nimport PersonalData from \"../components/personal-data/personal-data\";\r\nimport ConfirmationStep from '../components/confirmation/confirmationStep'\r\nimport SucessWarning from '../components/sucess/sucessPage'\r\n\r\n\r\nexport const steps = [\r\n    <SignUpForm/>,\r\n    <PersonalData />,\r\n    <AddressRegistration />,\r\n    <ConfirmationStep/>,\r\n    <SucessWarning/>\r\n  ];","import {useContext, useState, useEffect, createContext, ReactNode} from 'react';\r\nimport {steps} from '../steps-array/steps'\r\n\r\ntype User = {\r\n    email: string;\r\n    password: string;\r\n    features: boolean;\r\n    discounts: boolean;\r\n    name: string;\r\n    id: number | null;\r\n    street: string;\r\n    number: string; \r\n    city: string;\r\n    district: string;\r\n    zip: string \r\n}\r\n\r\ntype FormContextData = {\r\n    userData: User;\r\n    currentStep: number;\r\n    onFormSubmit: (newData: Partial<User> ) => void;\r\n    nextStep: () => void;\r\n    previousStep: () => void;\r\n    stepperDisplay: string;\r\n}\r\n\r\ntype FormContextProviderProps = {\r\n    children: ReactNode\r\n}\r\n\r\nexport const FormContext = createContext({} as FormContextData)\r\n\r\n\r\nexport function FormContextProvider({children}: FormContextProviderProps) {\r\n    const [stepperDisplay, setStepperDisplay] = useState('block')\r\n    const [userData, setUserData] = useState<User>({} as User)\r\n    const [currentStep, setCurrentStep] = useState(0)\r\n\r\n    useEffect(()=> {\r\n        if(currentStep === steps.length - 1){\r\n          console.log(userData)\r\n          setStepperDisplay('none')\r\n        }\r\n      })    \r\n      \r\n    function onFormSubmit(newdata: Partial<User>) {\r\n    setUserData({...userData, ...newdata})\r\n    nextStep()\r\n    }\r\n\r\n    function nextStep(){\r\n    //if(currentStep === steps.length) return\r\n    setCurrentStep(currentStep + 1)\r\n    }\r\n    \r\n    function previousStep(){\r\n    setCurrentStep(currentStep - 1)\r\n    }\r\n\r\n    return(\r\n        <FormContext.Provider value={\r\n            {userData,\r\n            currentStep,\r\n            stepperDisplay,\r\n            onFormSubmit,\r\n            nextStep,\r\n            previousStep}\r\n        }>\r\n            {children}\r\n        </FormContext.Provider>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport const useForm = () => {\r\n    return useContext(FormContext)\r\n}","import { Stepper, Step, StepLabel, Box } from \"@material-ui/core\";\r\nimport { useForm } from \"../../contexts/formContext\";\r\nimport { steps } from \"../../steps-array/steps\";\r\nimport { ValidationContextProvider } from \"../../contexts/validationContext\";\r\n\r\nexport function CheckoutForm() {\r\n  const { currentStep, stepperDisplay  } = useForm();\r\n\r\n  \r\n\r\n  return (\r\n    <ValidationContextProvider>\r\n      <Box display={stepperDisplay}>\r\n        <Stepper activeStep={currentStep}>\r\n          <Step>\r\n            <StepLabel>Signup</StepLabel>\r\n          </Step>\r\n          <Step>\r\n            <StepLabel>Personal</StepLabel>\r\n          </Step>\r\n          <Step>\r\n            <StepLabel>Address</StepLabel>\r\n          </Step>\r\n          <Step>\r\n            <StepLabel>Confirmation</StepLabel>\r\n          </Step>\r\n        </Stepper>\r\n      </Box>\r\n\r\n      {steps[currentStep]}\r\n\r\n    </ValidationContextProvider>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default CheckoutForm;\r\n","import \"./App.css\";\nimport {CheckoutForm} from \"./components/checkout/checkout-form\";\nimport { Container, Typography } from \"@material-ui/core\";\nimport \"fontsource-roboto\";\nimport {FormContextProvider} from './contexts/formContext'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container maxWidth=\"sm\">\n        <FormContextProvider>\n          <CheckoutForm/>\n        </FormContextProvider>        \n      </Container>\n    </div>\n  );\n}\n\n\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}